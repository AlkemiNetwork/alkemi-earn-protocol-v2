/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { VRFTestHelper } from "./VRFTestHelper";

export class VRFTestHelperFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<VRFTestHelper> {
    return super.deploy(overrides) as Promise<VRFTestHelper>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): VRFTestHelper {
    return super.attach(address) as VRFTestHelper;
  }
  connect(signer: Signer): VRFTestHelperFactory {
    return super.connect(signer) as VRFTestHelperFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFTestHelper {
    return new Contract(address, _abi, signerOrProvider) as VRFTestHelper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "p1",
        type: "uint256[2]"
      },
      {
        internalType: "uint256[2]",
        name: "p2",
        type: "uint256[2]"
      },
      {
        internalType: "uint256",
        name: "invZ",
        type: "uint256"
      }
    ],
    name: "affineECAdd_",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "exponent",
        type: "uint256"
      }
    ],
    name: "bigModExp_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "x",
        type: "uint256[2]"
      },
      {
        internalType: "uint256",
        name: "scalar",
        type: "uint256"
      },
      {
        internalType: "uint256[2]",
        name: "q",
        type: "uint256[2]"
      }
    ],
    name: "ecmulVerify_",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "b",
        type: "bytes"
      }
    ],
    name: "fieldHash_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pk",
        type: "uint256[2]"
      },
      {
        internalType: "uint256",
        name: "x",
        type: "uint256"
      }
    ],
    name: "hashToCurve_",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256"
      },
      {
        internalType: "uint256[2]",
        name: "p1",
        type: "uint256[2]"
      },
      {
        internalType: "uint256[2]",
        name: "cp1Witness",
        type: "uint256[2]"
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256"
      },
      {
        internalType: "uint256[2]",
        name: "p2",
        type: "uint256[2]"
      },
      {
        internalType: "uint256[2]",
        name: "sp2Witness",
        type: "uint256[2]"
      },
      {
        internalType: "uint256",
        name: "zInv",
        type: "uint256"
      }
    ],
    name: "linearCombination_",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "px",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "py",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "qx",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "qy",
        type: "uint256"
      }
    ],
    name: "projectiveECAdd_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes"
      }
    ],
    name: "randomValueFromVRFProof_",
    outputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "hash",
        type: "uint256[2]"
      },
      {
        internalType: "uint256[2]",
        name: "pk",
        type: "uint256[2]"
      },
      {
        internalType: "uint256[2]",
        name: "gamma",
        type: "uint256[2]"
      },
      {
        internalType: "address",
        name: "uWitness",
        type: "address"
      },
      {
        internalType: "uint256[2]",
        name: "v",
        type: "uint256[2]"
      }
    ],
    name: "scalarFromCurvePoints_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256"
      }
    ],
    name: "squareRoot_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256"
      },
      {
        internalType: "uint256[2]",
        name: "p",
        type: "uint256[2]"
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "lcWitness",
        type: "address"
      }
    ],
    name: "verifyLinearCombinationWithGenerator_",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pk",
        type: "uint256[2]"
      },
      {
        internalType: "uint256[2]",
        name: "gamma",
        type: "uint256[2]"
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "uWitness",
        type: "address"
      },
      {
        internalType: "uint256[2]",
        name: "cGammaWitness",
        type: "uint256[2]"
      },
      {
        internalType: "uint256[2]",
        name: "sHashWitness",
        type: "uint256[2]"
      },
      {
        internalType: "uint256",
        name: "zInv",
        type: "uint256"
      }
    ],
    name: "verifyVRFProof_",
    outputs: [],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256"
      }
    ],
    name: "ySquared_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ae2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806395e6ee921161008c578063b481e26011610066578063b481e26014610487578063cefda0c51461052d578063ef3b10ec146105d3578063fe54f2a2146106cf576100df565b806395e6ee921461039e5780639d6f0337146103eb578063aa7b2fbb14610408576100df565b80637f8f50a8116100bd5780637f8f50a8146102175780638af046ea146102ff57806391d5f6911461031c576100df565b8063244f896d146100e457806335452450146101955780635de60042146101e2575b600080fd5b61015a600480360360a08110156100fa57600080fd5b60408051808201825291830192918183019183906002908390839080828437600092019190915250506040805180820182529295949381810193925090600290839083908082843760009201919091525091945050903591506107ab9050565b6040518082600260200280838360005b8381101561018257818101518382015260200161016a565b5050505090500191505060405180910390f35b61015a600480360360608110156101ab57600080fd5b6040805180820182529183019291818301918390600290839083908082843760009201919091525091945050903591506107c69050565b610205600480360360408110156101f857600080fd5b50803590602001356107e1565b60408051918252519081900360200190f35b610205600480360361012081101561022e57600080fd5b604080518082018252918301929181830191839060029083908390808284376000920191909152505060408051808201825292959493818101939250906002908390839080828437600092019190915250506040805180820182529295949381810193925090600290839083908082843760009201919091525050604080518082018252929573ffffffffffffffffffffffffffffffffffffffff85351695909490936060820193509160209091019060029083908390808284376000920191909152509194506107ed9350505050565b6102056004803603602081101561031557600080fd5b5035610806565b61038a600480360360a081101561033257600080fd5b6040805180820182528335939283019291606083019190602084019060029083908390808284376000920191909152509194505081359250506020013573ffffffffffffffffffffffffffffffffffffffff16610819565b604080519115158252519081900360200190f35b6103cd600480360360808110156103b457600080fd5b5080359060208101359060408101359060600135610830565b60408051938452602084019290925282820152519081900360600190f35b6102056004803603602081101561040157600080fd5b5035610851565b61038a600480360360a081101561041e57600080fd5b604080518082018252918301929181830191839060029083908390808284376000920191909152505060408051808201825292958435959094909360608201935091602090910190600290839083908082843760009201919091525091945061085c9350505050565b6102056004803603602081101561049d57600080fd5b8101906020810181356401000000008111156104b857600080fd5b8201836020820111156104ca57600080fd5b803590602001918460018302840111640100000000831117156104ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610869945050505050565b6102056004803603602081101561054357600080fd5b81019060208101813564010000000081111561055e57600080fd5b82018360208201111561057057600080fd5b8035906020019184600183028401116401000000008311171561059257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610874945050505050565b6106cd60048036036101a08110156105ea57600080fd5b604080518082018252918301929181830191839060029083908390808284376000920191909152505060408051808201825292959493818101939250906002908390839080828437600092019190915250506040805180820182529295843595602086013595838101359573ffffffffffffffffffffffffffffffffffffffff60608301351695509293919260c082019290916080019060029083908390808284376000920191909152505060408051808201825292959493818101939250906002908390839080828437600092019190915250919450509035915061087f9050565b005b61015a60048036036101608110156106e657600080fd5b6040805180820182528335939283019291606083019190602084019060029083908390808284376000920191909152505060408051808201825292959493818101939250906002908390839080828437600092019190915250506040805180820182529295843595909490936060820193509160209091019060029083908390808284376000920191909152505060408051808201825292959493818101939250906002908390839080828437600092019190915250919450509035915061089b9050565b6107b36119f1565b6107be8484846108be565b949350505050565b6107ce6119f1565b6107d883836109ec565b90505b92915050565b60006107d88383610a8f565b60006107fc8686868686610b88565b9695505050505050565b600061081182610cab565b90505b919050565b600061082785858585610cd7565b95945050505050565b600080600061084187878787610ea3565b9250925092509450945094915050565b600061081182611039565b60006107be848484611091565b6000610811826111f7565b60006108118261124c565b6108908989898989898989896113ba565b505050505050505050565b6108a36119f1565b6108b2888888888888886116bb565b98975050505050505050565b6108c66119f1565b8351602080860151855191860151600093849384936108e793909190610ea3565b919450925090507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f85820960011461098057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f696e765a206d75737420626520696e7665727365206f66207a00000000000000604482015290519081900360640190fd5b60405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806109b357fe5b87860981526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8785099052979650505050505050565b6109f46119f1565b610a52600184846040516020018084815260200183600260200280838360005b83811015610a2c578181015183820152602001610a14565b505050509050018281526020019350505050604051602081830303815290604052611822565b90505b610a5e81611890565b6107db578051604080516020818101939093528151808203909301835281019052610a8890611822565b9050610a55565b600080610a9a611a0f565b6020808252818101819052604082015260608101859052608081018490527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f60a0820152610ae6611a2d565b60208160c08460057ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa925082610b7e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6269674d6f64457870206661696c757265210000000000000000000000000000604482015290519081900360640190fd5b5195945050505050565b6000600286868685876040516020018087815260200186600260200280838360005b83811015610bc2578181015183820152602001610baa565b5050505090500185600260200280838360005b83811015610bed578181015183820152602001610bd5565b5050505090500184600260200280838360005b83811015610c18578181015183820152602001610c00565b5050505090500183600260200280838360005b83811015610c43578181015183820152602001610c2b565b505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140196505050505050506040516020818303038152906040528051906020012060001c905095945050505050565b6000610811827f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffbfffff0c610a8f565b600073ffffffffffffffffffffffffffffffffffffffff8216610d5b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f626164207769746e657373000000000000000000000000000000000000000000604482015290519081900360640190fd5b602084015160009060011615610d7257601c610d75565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418587600060200201510986517ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414191820392506000919089098751604080516000808252602082810180855288905260ff8916838501526060830194909452608082018590529151939450909260019260a08084019391927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081019281900390910190855afa158015610e50573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015173ffffffffffffffffffffffffffffffffffffffff9081169088161495505050505050949350505050565b60008080600180827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f897ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038808905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038a0890506000610f4b838385856118ce565b9098509050610f5c88828e88611926565b9098509050610f6d88828c87611926565b90985090506000610f808d878b85611926565b9098509050610f91888286866118ce565b9098509050610fa288828e89611926565b9098509050818114611025577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f818a0998507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f82890997507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8183099650611029565b8196505b5050505050509450945094915050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80848509840990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f600782089392505050565b60008261109d57600080fd5b83516020850151600090600116156110b657601c6110b9565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141838709604080516000808252602080830180855282905260ff871683850152606083018890526080830185905292519394509260019260a08084019391927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081019281900390910190855afa15801561115b573d6000803e3d6000fd5b5050506020604051035190506000866040516020018082600260200280838360005b8381101561119557818101518382015260200161117d565b505050509050019150506040516020818303038152906040528051906020012060001c90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614955050505050509392505050565b805160208201205b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8110610814576040805160208082019390935281518082038401815290820190915280519101206111ff565b60006101a08251146112bf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f77726f6e672070726f6f66206c656e6774680000000000000000000000000000604482015290519081900360640190fd5b6112c76119f1565b6112cf6119f1565b6112d7611a4b565b60006112e16119f1565b6112e96119f1565b6000888060200190516101a081101561130157600080fd5b5060e08101516101808201519198506040890197506080890196509450610100880193506101408801925090506113548787876000602002015188600160200201518960026020020151898989896113ba565b6003866040516020018083815260200182600260200280838360005b83811015611388578181015183820152602001611370565b50505050905001925050506040516020818303038152906040528051906020012060001c975050505050505050919050565b6113c389611890565b61142e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f7075626c6963206b6579206973206e6f74206f6e206375727665000000000000604482015290519081900360640190fd5b61143788611890565b6114a257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f67616d6d61206973206e6f74206f6e2063757276650000000000000000000000604482015290519081900360640190fd5b6114ab83611890565b61151657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6347616d6d615769746e657373206973206e6f74206f6e206375727665000000604482015290519081900360640190fd5b61151f82611890565b61158a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f73486173685769746e657373206973206e6f74206f6e20637572766500000000604482015290519081900360640190fd5b611596878a8887610cd7565b61160157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6164647228632a706b2b732a6729e289a05f755769746e657373000000000000604482015290519081900360640190fd5b6116096119f1565b6116138a876109ec565b905061161d6119f1565b61162c898b878b8689896116bb565b9050600061163d838d8d8a86610b88565b9050808a146116ad57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c69642070726f6f6600000000000000000000000000000000000000604482015290519081900360640190fd5b505050505050505050505050565b6116c36119f1565b825186517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f9190030661175757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f706f696e747320696e2073756d206d7573742062652064697374696e63740000604482015290519081900360640190fd5b611762878988611091565b6117b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611a6a6021913960400191505060405180910390fd5b6117c2848685611091565b611817576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a8b6022913960400191505060405180910390fd5b6108b28684846108be565b61182a6119f1565b611833826111f7565b815261184e6118498260005b6020020151611039565b610cab565b602082018190526002900660011415610814576020810180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f039052919050565b60208101516000907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f9080096118c783600061183f565b1492915050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8487097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8487099097909650945050505050565b600080807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f87877ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f030990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8183087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f86890990999098509650505050505050565b60405180604001604052806002906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060600160405280600390602082028036833750919291505056fe4669727374206d756c7469706c69636174696f6e20636865636b206661696c65645365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c6564a2646970667358221220dee816322246344534dd5ef1e716b4fabe4d4b4aacaffe9590272935c5c743b064736f6c63430006060033";
